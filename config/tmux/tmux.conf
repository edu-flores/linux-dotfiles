#################################
#            General            #
#################################

# Prefix key
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Reload configuration
bind -n M-r source-file ~/.config/tmux/tmux.conf \; display '#[fill=terminal,bg=terminal,fg=yellow,align=centre]󰞌 #[fg=terminal]Reloading...'


#################################
#            Global             #
#################################

# Global variables
max_windows=5

# Remove zero-based numbering
set -g base-index 1
set -g pane-base-index 1

# Enable mouse mode
set -g mouse on

# Prevent automatic copy
set -g set-clipboard off

# Decrement escape time
set -g escape-time 10

# Fix End and Home keys
bind -n End send-key C-e
bind -n Home send-key C-a


#################################
#           Sessions            #
#################################

# Create session
bind -n M-C new-session

# Rename session
bind -n M-s command-prompt -p '#[fg=blue]󰏫 󰙅 #[fg=terminal]Rename session #[fg=magenta] ' 'rename-session "%%"'

# Show session tree
bind -n M-t choose-tree -Zw

# Switch sessions
bind -n M-K if '[ #{server_sessions} -gt 1 ]' 'switch-client -p'
bind -n M-J if '[ #{server_sessions} -gt 1 ]' 'switch-client -n'
bind -n M-P if '[ #{server_sessions} -gt 1 ]' 'switch-client -p'
bind -n M-N if '[ #{server_sessions} -gt 1 ]' 'switch-client -n'


#################################
#            Windows            #
#################################

# Rename window
bind -n M-w command-prompt -p '#[fg=green]󰏫   #[fg=terminal]Rename window #[fg=magenta] ' 'rename-window "%%"'

# Create window
bind -n M-c if '[ "#{session_windows}" -lt $max_windows ]' 'new-window'

# Kill window
bind -n M-Q if '[ "#{session_windows}" -eq 1 ]' \
  'confirm-before -y -p "#[fg=yellow]  #[fg=terminal]Are you sure you want to exit? #[fg=magenta][Y/n]  " kill-window' \
  'kill-window'

# Windows back and forth
bind -n M-Tab run 'tmux last-window'

# Switch windows
bind -n M-H if '[ #{session_windows} -gt 1 ]' 'previous-window'
bind -n M-L if '[ #{session_windows} -gt 1 ]' 'next-window'
bind -n M-p if '[ #{session_windows} -gt 1 ]' 'previous-window'
bind -n M-n if '[ #{session_windows} -gt 1 ]' 'next-window'
bind -n M-1 if 'tmux list-windows | grep -q "1:"' 'select-window -t 1'
bind -n M-2 if 'tmux list-windows | grep -q "2:"' 'select-window -t 2'
bind -n M-3 if 'tmux list-windows | grep -q "3:"' 'select-window -t 3'
bind -n M-4 if 'tmux list-windows | grep -q "4:"' 'select-window -t 4'
bind -n M-5 if 'tmux list-windows | grep -q "5:"' 'select-window -t 5'

# Renumber windows
bind -n M-! if 'tmux list-windows | grep -q "1:"' 'swap-window -t 1; select-window -t 1' 'move-window -t 1'
bind -n M-@ if 'tmux list-windows | grep -q "2:"' 'swap-window -t 2; select-window -t 2' 'move-window -t 2'
bind -n M-# if 'tmux list-windows | grep -q "3:"' 'swap-window -t 3; select-window -t 3' 'move-window -t 3'
bind -n M-$ if 'tmux list-windows | grep -q "4:"' 'swap-window -t 4; select-window -t 4' 'move-window -t 4'
bind -n M-% if 'tmux list-windows | grep -q "5:"' 'swap-window -t 5; select-window -t 5' 'move-window -t 5'


#################################
#             Panes             #
#################################

# Select pane
bind -n M-m select-pane -m

# Swap panes
bind -n M-M run "tmux display -p '#{pane_id}' | xargs tmux swap-pane -d -t; tmux select-pane -m"

# Zoom pane
bind -n M-f resize-pane -Z

# Kill pane
bind -n M-q if '[ "#{session_windows}" -eq 1 -a "#{window_panes}" -eq 1 ]' \
  'confirm-before -y -p "#[fg=yellow]  #[fg=terminal]Are you sure you want to exit? #[fg=magenta][Y/n]  " kill-pane' \
  'kill-pane'

# Split pane
bind -n M-z split-window -v -c "#{pane_current_path}"
bind -n M-x split-window -h -c "#{pane_current_path}"

# Break pane
bind -n M-b if '[ "#{session_windows}" -lt $max_windows ]' 'break-pane'

# Toggle layout
bind -n M-space next-layout

# Switch panes
bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R
bind -n M-h     select-pane -L
bind -n M-j     select-pane -D
bind -n M-k     select-pane -U
bind -n M-l     select-pane -R


#################################
#           Copy-Mode           #
#################################

# Replace emacs bindings for vi bindings
set -g mode-keys vi

# Prevent window from jumping down after selecting text
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x


#################################
#            Styling            #
#################################

# Empty line above the status bar
if -F '#{!=:#{status},2}' {
    set -Fg status-format[1] '#{status-format[0]}'
    set -g status-format[0] ''
    set -g status 2
}

# Terminal colors
set -g status-style "bg=terminal"
set -g message-style "fill=terminal,bg=terminal,fg=terminal"

# Left side of the status bar
set -g status-left-length 30
set -g status-left '#[fg=brightblue]#[bg=brightblue,fg=black] 󰙅 #{?client_prefix, , } #S #[bg=terminal,fg=brightblue] '

# Inactive windows format
set -g window-status-format '  #{?#{==:#{window_index},1},󰎦,}#{?#{==:#{window_index},2},󰎩,}#{?#{==:#{window_index},3},󰎬,}#{?#{==:#{window_index},4},󰎮,}#{?#{==:#{window_index},5},󰎰,} #W #[fg=brightyellow]#{?window_last_flag,󰁯, } '

# Active window format
set -g window-status-current-format ' #[fg=brightgreen,bold] #{?#{==:#{window_index},1},󰎤,}#{?#{==:#{window_index},2},󰎧,}#{?#{==:#{window_index},3},󰎪,}#{?#{==:#{window_index},4},󰎭,}#{?#{==:#{window_index},5},󰎱,}#[fg=terminal] #W #[fg=brightred]#{?window_zoomed_flag,󰁌, } '

# Right side of the status bar
set -g status-right-length 30
mem_usage="#(free | awk '/^Mem/ {printf \"%.1f\", $3 / 1024 / 1024}') GiB"
cpu_usage="#(grep 'cpu ' /proc/stat | awk '{printf \"%.1f\", ($2+$4)*100/($2+$4+$5)}')%"
set -g status-right "#[fg=brightblack] #[bg=brightblack,fg=brightwhite] $mem_usage   #[bg=brightgreen,fg=brightblack]#[fg=black] $cpu_usage  #[bg=terminal,fg=brightgreen]"

# Panel borders color
set -g pane-border-style "fg=brightblack"
set -g pane-active-border-style "fg=brightwhite"

# Mode style
set -g mode-style "bg=brightblack,fg=brightwhite"
