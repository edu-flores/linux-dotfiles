# +=======================================+
#                                        
#                                        
#   ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#   ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#      ██║   ██╔████╔██║██║   ██║ ╚███╔╝ 
#      ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗ 
#      ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#      ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#                                        
#                                        
# +=======================================+

# Prefix key
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Reload configuration
bind -n M-r source-file ~/.config/tmux/tmux.conf \; display '#[fill=terminal,bg=terminal,fg=yellow,align=centre]󰞌 #[fg=terminal]Reloading...'


##### GLOBAL #####

# Global variables
max_windows=5

# Remove zero-based numbering
set -g base-index 1
set -g pane-base-index 1

# Enable mouse mode
set -g mouse on

# Decrement escape time
set -g escape-time 10

# Fix End and Home keys
bind -n End send-key C-e
bind -n Home send-key C-a


##### SESSIONS #####

# Rename session
bind -n M-s command-prompt -p '#[fg=blue]󰏫 󰙅 #[fg=terminal]Rename session #[fg=magenta] ' 'rename-session "%%"'

# Show session tree
bind -n M-t choose-tree -Zw

# Switch sessions
bind -n M-K if '[ #{server_sessions} -gt 1 ]' 'switch-client -p'
bind -n M-J if '[ #{server_sessions} -gt 1 ]' 'switch-client -n'
bind -n M-P if '[ #{server_sessions} -gt 1 ]' 'switch-client -p'
bind -n M-N if '[ #{server_sessions} -gt 1 ]' 'switch-client -n'


##### WINDOWS #####

# Rename window
bind -n M-w command-prompt -p '#[fg=green]󰏫   #[fg=terminal]Rename window #[fg=magenta] ' 'rename-window "%%"'

# Create window
bind -n M-c if '[ "#{session_windows}" -lt $max_windows ]' 'new-window'

# Kill window
bind -n M-Q if '[ "#{session_windows}" -eq 1 ]' \
  'confirm-before -y -p "#[fg=yellow]  #[fg=terminal]Are you sure you want to exit? #[fg=magenta][Y/n]  " kill-window' 'kill-window'

# Window back and forth
bind -n M-Tab run-shell 'tmux last-window'

# Switch windows
bind -n M-H if '[ #{session_windows} -gt 1 ]' 'previous-window'
bind -n M-L if '[ #{session_windows} -gt 1 ]' 'next-window'
bind -n M-p if '[ #{session_windows} -gt 1 ]' 'previous-window'
bind -n M-n if '[ #{session_windows} -gt 1 ]' 'next-window'
bind -n M-1 if 'tmux list-windows | grep -q "1:"' 'select-window -t 1'
bind -n M-2 if 'tmux list-windows | grep -q "2:"' 'select-window -t 2'
bind -n M-3 if 'tmux list-windows | grep -q "3:"' 'select-window -t 3'
bind -n M-4 if 'tmux list-windows | grep -q "4:"' 'select-window -t 4'
bind -n M-5 if 'tmux list-windows | grep -q "5:"' 'select-window -t 5'


##### PANES #####

# Zoom panes
bind -n M-f resize-pane -Z

# Kill panes
bind -n M-q if '[ "#{session_windows}" -eq 1 -a "#{window_panes}" -eq 1 ]' \
  'confirm-before -y -p "#[fg=yellow]  #[fg=terminal]Are you sure you want to exit? #[fg=magenta][Y/n]  " kill-pane' 'kill-pane'

# Split panes
bind -n M-z split-window -v
bind -n M-x split-window -h

# Break panes
bind -n M-b if '[ "#{session_windows}" -lt $max_windows ]' 'break-pane'

# Toggle layout
bind -n M-space next-layout

# Switch panes
bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R


### STYLING ###

# Terminal styling
set -g status-style bg=terminal
set -g message-style fill=terminal,bg=terminal,fg=terminal

# Left side of the status bar
set -g status-left-length 30
set -g status-left '#[bg=brightblue,fg=black] #{?client_prefix,,} 󰙅 #S #[bg=terminal,fg=brightblue] '

# Inactive windows
set -g window-status-format '  #{?#{==:#{window_index},1},󰎦,}#{?#{==:#{window_index},2},󰎩,}#{?#{==:#{window_index},3},󰎬,}#{?#{==:#{window_index},4},󰎮,}#{?#{==:#{window_index},5},󰎰,} #W #[fg=brightyellow]#{?window_last_flag,󰁯,} '

# Active window
set -g window-status-current-format '  #[fg=brightgreen]#{?#{==:#{window_index},1},󰎤,}#{?#{==:#{window_index},2},󰎧,}#{?#{==:#{window_index},3},󰎪,}#{?#{==:#{window_index},4},󰎭,}#{?#{==:#{window_index},5},󰎱,}#[fg=terminal] #W #[fg=brightred]#{?window_zoomed_flag,󰁌,} '

# Right side of the status bar
set -g status-right-length 30
mem_usage="#(free | awk '/^Mem/ {printf \"%.0f\", $3 / 976600}')"
cpu_usage="#(grep 'cpu ' /proc/stat | awk '{printf \"%.0f\", ($2+$4)*100/($2+$4+$5)}')"
set -g status-right "#[fg=brightblack] #[bg=brightblack,fg=brightwhite]   $mem_usage GB #[fg=brightcyan]#[bg=brightcyan,fg=black]  #[bg=brightcyan] $cpu_usage% "

# Panel borders color
set -g pane-border-style fg=brightblack
set -g pane-active-border-style fg=brightwhite
